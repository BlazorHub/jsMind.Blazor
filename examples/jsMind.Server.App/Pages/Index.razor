@page "/"
@using JsMind.Blazor.Events
@using JsMind.Blazor.Models

<h1>jsMind Demo</h1>

SelectedNodeId = @SelectedNodeId

<div>
    <label>TreeNodes</label>
    <MindMapContainer Options="@_options"
                      Data="@_treeData"
                      OnSelectNode=@OnSelectNode
                      style="border:solid 1px blue; background:#f4f4f4;" />
</div>
<hr />
<div>
    <label>ArrayNodes with parentId</label>
    <MindMapContainer options="@_options" data="@_arrayData1" style="border:solid 1px red; background:#f4f4f4;" />
</div>
<hr />
<div>
    <label>ArrayNodes with Parent</label>
    <MindMapContainer options="@_options" data="@_arrayData2" style="border:solid 1px green; background:#f4f4f4;" />
</div>

@code
{
    string SelectedNodeId = "";

    readonly MindMapOptions _options = new MindMapOptions
    {
        Editable = true
    };

    readonly MindMapData _treeData = new MindMapData
    {
        RootNode = new MindMapTreeNode
        {
            Id = "root",
            Topic = "-Root-",
            Children = new List<MindMapTreeNode>
{
                new MindMapTreeNode
                {
                    Id = "sub1",
                    Topic = "sub1-right"
                },
                new MindMapTreeNode
                {
                    Id = "sub2",
                    Topic = "sub2-left",
                    Direction = MindMapNodeDirection.Left
                }
            }
        }
    };

    readonly MindMapData _arrayData1 = new MindMapData
    {
        Nodes = new List<MindMapArrayNode>
{
            new MindMapArrayNode
            {
                IsRoot = true,
                Id = "root",
                Topic = "-Root-"
            },
            new MindMapArrayNode
            {
                Id = "sub1",
                Topic = "sub1-right",
                ParentId = "root"
            },
            new MindMapArrayNode
            {
                Id = "sub2",
                Topic = "sub2-left",
                ParentId = "root",
                Direction = MindMapNodeDirection.Left
            }
        }
    };

    readonly MindMapData _arrayData2 = new MindMapData
    {
        Nodes = new List<MindMapArrayNode>()
    };

    protected override Task OnInitializedAsync()
    {
        var root = new MindMapArrayNode
        {
            IsRoot = true,
            Id = "root",
            Topic = "-Root-"
        };
        _arrayData2.Nodes.Add(root);

        var sub1 = new MindMapArrayNode
        {
            Id = "sub1",
            Topic = "sub1-right",
            Parent = root
        };

        var sub2 = new MindMapArrayNode
        {
            Id = "sub2",
            Topic = "sub2-left",
            Parent = root,
            Direction = MindMapNodeDirection.Left
        };
        _arrayData2.Nodes.Add(sub1);
        _arrayData2.Nodes.Add(sub2);



        return base.OnInitializedAsync();
    }

    public void OnSelectNode(MindMapEventArgs args)
    {
        SelectedNodeId = args.NodeId;

        StateHasChanged();
    }
}